let ctx_input;let ctx_output;function drawImage(image){virtual_canvas=document.querySelector('#virtual-canvas');virtual_ctx=virtual_canvas.getContext('2d');virtual_ctx.clearRect(0,0,virtual_canvas.width,virtual_canvas.height);virtual_canvas.width=image.width;virtual_canvas.height=image.height;virtual_ctx.drawImage(image,0,0,image.width,image.height);canvas_input=document.querySelector('#img-input');scroller_inner=document.querySelector('#canvas-scroller-input-inner');ctx_input=canvas_input.getContext('2d');ctx_input.clearRect(0,0,canvas_input.width,canvas_input.height);img=image;let width=img.width,height=img.height;const max_width=1000,max_height=1000;if(width>max_width){if(img.width>img.height){height=max_width*img.height/img.width;width=max_width;}else{width=max_height*img.width/img.height;height=max_height;}}
if(height>max_height){if(img.width>img.height){height=max_width*img.height/img.width;width=max_width;}else{width=max_height*img.width/img.height;height=max_height;}}
console.log("after width:"+width+", height:"+height);canvas_input.width=width;canvas_input.height=height;canvas_input.style.width=width;canvas_input.style.height=height;ctx_input.canvas.width=width;ctx_input.canvas.height=height;ctx_input.drawImage(image,0,0,width,height);canvas_output=document.querySelector('#img-output');ctx_output=canvas_output.getContext('2d');ctx_output.clearRect(0,0,canvas_output.width,canvas_output.height);}
function onCvLoaded(){console.log('on OpenCV.js Loaded',cv);cv.onRuntimeInitialized=onCVReady();canvas_input=document.querySelector('#img-input');canvas_input.addEventListener('mousedown',function(e){console.log("mousedown at "+e.offsetX+", "+e.offsetY);});canvas_input.addEventListener('mouseup',function(e){console.log("mouseup at "+e.offsetX+", "+e.offsetY);});}
function onCVReady(){console.log("onCVReady");window.addEventListener('DOMContentLoaded',onUtilsLoaded);}
function OnDownloadButtonClicked(){let canvas=document.getElementById("virtual-canvas");let link=document.createElement("a");link.href=canvas.toDataURL("image/png");link.download="test.png";link.click();}
function mosaic(img,x,y,w,h){let roi=img.roi(new cv.Rect(x,y,w,h));let dst=new cv.Mat();let dsize=new cv.Size(5,5);cv.resize(roi,dst,dsize,0,0,cv.INTER_AREA);let dst2=new cv.Mat();let dsize2=new cv.Size(w,h);cv.resize(dst,dst2,dsize2,0,0,cv.INTER_CUBIC);dst2.copyTo(img.roi(new cv.Rect(x,y,w,h)));roi.delete();dst.delete();dst2.delete();}
function onUtilsLoaded(){let fileInput=document.getElementById('fileInput');faceCascadeFile='./haarcascade_frontalface_default.xml';const utils=new Utils('error-message');utils.createFileFromUrl(faceCascadeFile,faceCascadeFile,()=>{fileInput.onchange=(e)=>{if(e.target.files.length==0){return;}
document.getElementById("processing").style.display="block";document.getElementById("arrow_down").style.display="none";document.getElementById("download").style.display="none";for(let element of document.getElementsByClassName("result_summary")){element.style.display="none";}
document.getElementById("img-input").style.display="none";document.getElementById("img-output").style.display="none";const image=new Image();image.src=URL.createObjectURL(e.target.files[0]);image.onload=()=>{drawImage(image);document.getElementById("img-input").style.display="block";document.getElementById("img-output").style.display="block";document.getElementById("download").style.display="inline";let faceCascade=new cv.CascadeClassifier();faceCascade.load(faceCascadeFile);detect(faceCascade);}};});}
function detect(faceCascade){let cvImage_result=cv.imread("img-input");let cvImage_detect=new cv.Mat();cvImage_result.copyTo(cvImage_detect);let img_width=cvImage_result.cols;let img_height=cvImage_result.rows;let gray=new cv.Mat();cv.cvtColor(cvImage_result,gray,cv.COLOR_RGBA2GRAY,0);let faces=new cv.RectVector();let msize=new cv.Size(0,0);faceCascade.detectMultiScale(gray,faces,1.1,3,0,msize,msize);console.log("faces.size() = "+faces.size());for(let i=0;i<faces.size();++i){let point1=new cv.Point(faces.get(i).x,faces.get(i).y);let point2=new cv.Point(faces.get(i).x+faces.get(i).width,faces.get(i).y+faces.get(i).height);cv.rectangle(cvImage_detect,point1,point2,[255,0,0,255],2);}
cv.imshow("img-input",cvImage_detect);for(let i=0;i<faces.size();++i){mosaic(cvImage_result,faces.get(i).x,faces.get(i).y,faces.get(i).width,faces.get(i).height);}
canvas_output=document.querySelector('#img-output');ctx_output=canvas_output.getContext('2d');canvas_output.width=img_width;canvas_output.height=img_height;canvas_output.style.width=img_width+"px";canvas_output.style.height=img_height+"px";document.getElementById("processing").style.display="none";document.getElementById("arrow_down").style.display="block";for(let element of document.getElementsByClassName("result_summary")){element.style.display="inline";}
cv.imshow("img-output",cvImage_result);let virtualImage=cv.imread("virtual-canvas");virtual_canvas=document.querySelector('#virtual-canvas');for(let i=0;i<faces.size();++i){mosaic(virtualImage,faces.get(i).x*(virtual_canvas.width/img_width),faces.get(i).y*(virtual_canvas.width/img_width),faces.get(i).width*(virtual_canvas.width/img_width),faces.get(i).height*(virtual_canvas.width/img_width));}
cv.imshow("virtual-canvas",virtualImage);cvImage_result.delete();cvImage_detect.delete();virtualImage.delete();gray.delete();faces.delete();faceCascade.delete();}
