let imageInput=null;let imageCanvas=null;let rgbValue=null;let colorPreview=null;let hexValue=null;let positionValue=null;let copyRgbButton=null;let copyHexButton=null;let image=null;let ctx=null;let ratio=1;$(document).ready(function(){imageInput=document.getElementById('image-input');imageCanvas=document.getElementById('image-canvas');rgbValue=document.getElementById('rgb-value');colorPreview=document.getElementById('color-preview');hexValue=document.getElementById('hex-value');positionValue=document.getElementById('position-value');copyRgbButton=document.getElementById('copy-rgb');copyHexButton=document.getElementById('copy-hex');ctx=imageCanvas.getContext('2d');imageInput.addEventListener('change',handleImageUpload);imageCanvas.addEventListener('click',handleCanvasClick);copyRgbButton.addEventListener('click',copyRgbToClipboard);copyHexButton.addEventListener('click',copyHexToClipboard);copyRgbButton.style.display='none';copyHexButton.style.display='none';});function handleImageUpload(e){const file=e.target.files[0];if(file&&file.type.match('image.*')){const reader=new FileReader();reader.onload=function(event){image=new Image();image.onload=function(){const maxWidth=800;const maxHeight=500;let width=image.width;let height=image.height;if(width>maxWidth||height>maxHeight){ratio=Math.min(maxWidth/width,maxHeight/height);width*=ratio;height*=ratio;}
imageCanvas.width=width;imageCanvas.height=height;ctx.drawImage(image,0,0,width,height);resetInfoArea();};image.src=event.target.result;};reader.readAsDataURL(file);}}
function handleCanvasClick(e){if(!image)return;const rect=imageCanvas.getBoundingClientRect();const x=Math.floor(e.clientX-rect.left);const y=Math.floor(e.clientY-rect.top);const pixelData=ctx.getImageData(x,y,1,1).data;const r=pixelData[0];const g=pixelData[1];const b=pixelData[2];rgbValue.textContent=`${r},${g},${b}`;colorPreview.style.backgroundColor=`rgb(${r},${g},${b})`;const hexR=r.toString(16).padStart(2,'0');const hexG=g.toString(16).padStart(2,'0');const hexB=b.toString(16).padStart(2,'0');hexValue.textContent=`#${hexR}${hexG}${hexB}`;positionValue.textContent=`X:${parseInt(x/ratio)},Y:${parseInt(y/ratio)}`;copyRgbButton.style.display='flex';copyHexButton.style.display='flex';}
function resetInfoArea(){rgbValue.textContent='クリックして値を取得';colorPreview.style.backgroundColor='transparent';hexValue.textContent='クリックして値を取得';positionValue.textContent='クリックして値を取得';copyRgbButton.style.display='none';copyHexButton.style.display='none';}
function copyRgbToClipboard(){if(rgbValue.textContent==='クリックして値を取得')return;navigator.clipboard.writeText(rgbValue.textContent).then(()=>{showCopiedFeedback(copyRgbButton);}).catch(err=>{console.error('クリップボードへのコピーに失敗しました:',err);});}
function copyHexToClipboard(){if(hexValue.textContent==='クリックして値を取得')return;navigator.clipboard.writeText(hexValue.textContent).then(()=>{showCopiedFeedback(copyHexButton);}).catch(err=>{console.error('クリップボードへのコピーに失敗しました:',err);});}
function showCopiedFeedback(button){button.classList.add('copied');setTimeout(()=>{button.classList.remove('copied');},1500);}
