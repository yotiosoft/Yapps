let ctx_input;let ctx_output;let detectedFaces=[];let manualSelections=[];let isSelecting=false;let startX,startY;let currentRect=null;let selectionInfo=document.createElement('div');selectionInfo.style.position='absolute';selectionInfo.style.backgroundColor='rgba(0, 0, 0, 0.7)';selectionInfo.style.color='white';selectionInfo.style.padding='5px';selectionInfo.style.borderRadius='3px';selectionInfo.style.fontSize='12px';selectionInfo.style.zIndex='1000';selectionInfo.style.pointerEvents='none';let image=null;let imageFilename=null;function drawImage(image){virtual_canvas=document.querySelector('#virtual-canvas');virtual_ctx=virtual_canvas.getContext('2d');virtual_ctx.clearRect(0,0,virtual_canvas.width,virtual_canvas.height);virtual_canvas.width=image.width;virtual_canvas.height=image.height;virtual_ctx.drawImage(image,0,0,image.width,image.height);canvas_input=document.querySelector('#img-input');scroller_inner=document.querySelector('#canvas-scroller-input-inner');ctx_input=canvas_input.getContext('2d');ctx_input.clearRect(0,0,canvas_input.width,canvas_input.height);img=image;let width=img.width,height=img.height;const max_width=1000,max_height=1000;if(width>max_width){if(img.width>img.height){height=max_width*img.height/img.width;width=max_width;}else{width=max_height*img.width/img.height;height=max_height;}}
if(height>max_height){if(img.width>img.height){height=max_width*img.height/img.width;width=max_width;}else{width=max_height*img.width/img.height;height=max_height;}}
canvas_input.width=width;canvas_input.height=height;canvas_input.style.width=width;canvas_input.style.height=height;ctx_input.canvas.width=width;ctx_input.canvas.height=height;ctx_input.drawImage(image,0,0,width,height);canvas_output=document.querySelector('#img-output');ctx_output=canvas_output.getContext('2d');ctx_output.clearRect(0,0,canvas_output.width,canvas_output.height);}
function onCvLoaded(){cv.onRuntimeInitialized=onCVReady();canvas_input=document.querySelector('#img-input');document.body.appendChild(selectionInfo);selectionInfo.style.display='none';canvas_input.addEventListener('click',function(e){const rect=canvas_input.getBoundingClientRect();const currentX=e.clientX-rect.left;const currentY=e.clientY-rect.top;let clickedOnFace=false;for(let i=0;i<detectedFaces.length;i++){const face=detectedFaces[i];if(currentX>=face.x&&currentX<=face.x+face.width&&currentY>=face.y&&currentY<=face.y+face.height){face.applyMosaic=!face.applyMosaic;redrawDetectionResults();applyMosaicToImage();clickedOnFace=true;break;}}
let clickedOnManualSelection=false;if(!clickedOnFace){for(let i=0;i<manualSelections.length;i++){const selection=manualSelections[i];if(currentX>=selection.x&&currentX<=selection.x+selection.width&&currentY>=selection.y&&currentY<=selection.y+selection.height){selection.applyMosaic=!selection.applyMosaic;redrawDetectionResults();applyMosaicToImage();clickedOnManualSelection=true;break;}}}
if(clickedOnFace||clickedOnManualSelection)return;if(!isSelecting){startX=currentX;startY=currentY;isSelecting=true;const canvasContainer=canvas_input.parentElement;canvasContainer.style.position='relative';selectionInfo.style.display='block';selectionInfo.style.left=(e.clientX+10+window.pageXOffset)+'px';selectionInfo.style.top=(e.clientY+10+window.pageYOffset)+'px';selectionInfo.textContent=`開始点:(${Math.round(startX)},${Math.round(startY)})`;currentRect=null;}else{isSelecting=false;currentRect={x:Math.min(startX,currentX),y:Math.min(startY,currentY),width:Math.abs(currentX-startX),height:Math.abs(currentY-startY)};if(currentRect&&currentRect.width>5&&currentRect.height>5){manualSelections.push({x:currentRect.x,y:currentRect.y,width:currentRect.width,height:currentRect.height,applyMosaic:true});redrawDetectionResults();applyMosaicToImage();}
currentRect=null;selectionInfo.style.display='none';}});canvas_input.addEventListener('mousemove',function(e){if(!isSelecting)return;const rect=canvas_input.getBoundingClientRect();const currentX=e.clientX-rect.left;const currentY=e.clientY-rect.top;console.log(window.pageYOffset);selectionInfo.style.left=(e.clientX+10+window.pageXOffset)+'px';selectionInfo.style.top=(e.clientY+10+window.pageYOffset)+'px';selectionInfo.textContent=`開始点:(${Math.round(startX)},${Math.round(startY)})
現在点:(${Math.round(currentX)},${Math.round(currentY)})
サイズ:${Math.round(Math.abs(currentX-startX))}x ${Math.round(Math.abs(currentY-startY))}`;});canvas_input.addEventListener('mouseleave',function(e){if(isSelecting){selectionInfo.style.display='none';}});canvas_input.addEventListener('mouseenter',function(e){if(isSelecting){selectionInfo.style.display='block';}});}
function onCVReady(){window.addEventListener('DOMContentLoaded',onUtilsLoaded);}
function OnDownloadButtonClicked(){let canvas=document.getElementById("virtual-canvas");let link=document.createElement("a");link.href=canvas.toDataURL("image/png");link.download=imageFilename+"_mosaic.png";link.click();}
function mosaic(img,x,y,w,h){let roi=img.roi(new cv.Rect(x,y,w,h));let dst=new cv.Mat();let dsize=new cv.Size(5,5);cv.resize(roi,dst,dsize,0,0,cv.INTER_AREA);let dst2=new cv.Mat();let dsize2=new cv.Size(w,h);cv.resize(dst,dst2,dsize2,0,0,cv.INTER_CUBIC);dst2.copyTo(img.roi(new cv.Rect(x,y,w,h)));roi.delete();dst.delete();dst2.delete();}
function onUtilsLoaded(){let fileInput=document.getElementById('fileInput');faceCascadeFile='./haarcascade_frontalface_default.xml';const utils=new Utils('error-message');utils.createFileFromUrl(faceCascadeFile,faceCascadeFile,()=>{fileInput.onchange=(e)=>{if(e.target.files.length==0){return;}
document.getElementById("processing").style.display="block";document.getElementById("arrow_down").style.display="none";document.getElementById("download").style.display="none";for(let element of document.getElementsByClassName("result_summary")){element.style.display="none";}
document.getElementById("img-input").style.display="none";document.getElementById("img-output").style.display="none";image=new Image();image.src=URL.createObjectURL(e.target.files[0]);imageFilename=e.target.files[0].name.replace(/\.[^/.]+$/,"");image.onload=()=>{drawImage(image);document.getElementById("img-input").style.display="block";document.getElementById("img-output").style.display="block";document.getElementById("download").style.display="inline";let faceCascade=new cv.CascadeClassifier();faceCascade.load(faceCascadeFile);detect(faceCascade);}};});}
function redrawDetectionResults(){let cvImage_detect=cv.imread("img-input");for(let i=0;i<detectedFaces.length;i++){const face=detectedFaces[i];let point1=new cv.Point(face.x,face.y);let point2=new cv.Point(face.x+face.width,face.y+face.height);let color=face.applyMosaic?[255,0,0,255]:[0,255,0,255];cv.rectangle(cvImage_detect,point1,point2,color,2);}
for(let i=0;i<manualSelections.length;i++){const selection=manualSelections[i];let point1=new cv.Point(selection.x,selection.y);let point2=new cv.Point(selection.x+selection.width,selection.y+selection.height);let color=selection.applyMosaic?[0,0,255,255]:[0,255,0,255];cv.rectangle(cvImage_detect,point1,point2,color,2);}
cv.imshow("img-input",cvImage_detect);cvImage_detect.delete();}
function applyMosaicToImage(){let cvImage_result=cv.imread("img-input");let img_width=cvImage_result.cols;let img_height=cvImage_result.rows;for(let i=0;i<detectedFaces.length;i++){const face=detectedFaces[i];if(face.applyMosaic){mosaic(cvImage_result,face.x,face.y,face.width,face.height);}}
for(let i=0;i<manualSelections.length;i++){const selection=manualSelections[i];if(selection.applyMosaic){mosaic(cvImage_result,selection.x,selection.y,selection.width,selection.height);}}
cv.imshow("img-output",cvImage_result);virtual_canvas=document.querySelector('#virtual-canvas');virtual_ctx=virtual_canvas.getContext('2d');virtual_ctx.clearRect(0,0,virtual_canvas.width,virtual_canvas.height);virtual_canvas.width=image.width;virtual_canvas.height=image.height;virtual_ctx.drawImage(image,0,0,image.width,image.height);virtualImage=cv.imread("virtual-canvas");for(let i=0;i<detectedFaces.length;i++){const face=detectedFaces[i];if(face.applyMosaic){const scale=virtual_canvas.width/img_width;mosaic(virtualImage,face.x*scale,face.y*scale,face.width*scale,face.height*scale);}}
for(let i=0;i<manualSelections.length;i++){const selection=manualSelections[i];if(selection.applyMosaic){const scale=virtual_canvas.width/img_width;mosaic(virtualImage,selection.x*scale,selection.y*scale,selection.width*scale,selection.height*scale);}}
cv.imshow("virtual-canvas",virtualImage);cvImage_result.delete();virtualImage.delete();}
function detect(faceCascade){let cvImage_result=cv.imread("img-input");let cvImage_detect=new cv.Mat();cvImage_result.copyTo(cvImage_detect);let img_width=cvImage_result.cols;let img_height=cvImage_result.rows;let gray=new cv.Mat();cv.cvtColor(cvImage_result,gray,cv.COLOR_RGBA2GRAY,0);let faces=new cv.RectVector();let msize=new cv.Size(0,0);faceCascade.detectMultiScale(gray,faces,1.1,3,0,msize,msize);detectedFaces=[];manualSelections=[];for(let i=0;i<faces.size();++i){detectedFaces.push({x:faces.get(i).x,y:faces.get(i).y,width:faces.get(i).width,height:faces.get(i).height,applyMosaic:true});}
canvas_output=document.querySelector('#img-output');ctx_output=canvas_output.getContext('2d');canvas_output.width=img_width;canvas_output.height=img_height;canvas_output.style.width=img_width+"px";canvas_output.style.height=img_height+"px";redrawDetectionResults();applyMosaicToImage();document.getElementById("processing").style.display="none";document.getElementById("arrow_down").style.display="block";for(let element of document.getElementsByClassName("result_summary")){element.style.display="inline";}
cvImage_result.delete();cvImage_detect.delete();gray.delete();faces.delete();faceCascade.delete();}
